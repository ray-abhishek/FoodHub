name: Codex CI Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ beta ]

jobs:
  build_codex:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.6.9]
    env:
      IN_DOCKER_CONTAINER: true
      ENV_IS_CI: true
      CI_DB_NAME: tests
      CI_DB_USER: root
      CI_DB_PASS: password
      CI_DB_HOST: mysql
      CI_DB_PORT: 3306 

    steps:

    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Check File 1
      run: |
        ls /usr/bin/

    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildy-cache
        key: ${{ runner.os }}-buildy-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/Dockerfile') }}
        restore-keys: ${{ runner.os }}-buildy-
   
    - name: Build and Pushhh
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: .
        file: foodhub/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags:  abhi22ray/foodhub:latest
        cache-from: type=local,src=/tmp/.buildy-cache
        cache-to: type=local,dest=/tmp/.buildy-cache
        
  test_codex:
    needs: [build_codex]
    runs-on: ubuntu-latest
    container:
      image: abhi22ray/foodhub
      credentials:
        username: abhi22ray
        password: ${{ secrets.DOCKERHUB_PASSWORD}}
      env:
        IN_DOCKER_CONTAINER: true
        ENV_IS_CI: true
        CI_DB_NAME: tests
        CI_DB_USER: root
        CI_DB_PASS: password
        CI_DB_HOST: mysql
        CI_DB_PORT: 3306
      
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
        ports:
        - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

      rabbitmq:
        image: rabbitmq:3.8.9
        env:
          RABBITMQ_DEFAULT_USER: urbanpiper
          RABBITMQ_DEFAULT_PASS: urbanpiper
          RABBITMQ_DEFAULT_VHOST: uphost
        ports:
        - 5672:5672
        options: -e RABBITMQ_ERLANG_COOKIE="COOKIE" -e RABBITMQ_DEFAULT_USER="urbanpiper" -e RABBITMQ_DEFAULT_PASS="urbanpiper" -e RABBITMQ_DEFAULT_VHOST="uphost"
          --health-cmd "rabbitmqctl node_health_check" --health-interval 10s --health-timeout 5s --health-retries 5
    
    steps:
    - uses: actions/checkout@v2
    - name: List Directory
      run: ls
      
    - name: Run Test inside Container
      run: pytest -s -vvv --cov foodhub/ --cov-report xml
      
  cov_codex:
   needs: [test_codex]
   runs-on: ubuntu-latest
   strategy:
     max-parallel: 2
     matrix:
       python-version: [3.6.9]
   
   steps: 
   - name: generating cov
     uses: codecov/codecov-action@v1
     with:
       token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
       name: codecov-umbrella # optional
       fail_ci_if_error: true # optional (default = false)
        
